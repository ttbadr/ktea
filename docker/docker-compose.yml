services:
  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    platform: linux/amd64
    depends_on:
      broker:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://broker:29092
      SCHEMA_REGISTRY_DEBUG: 'true'

  broker:
    image: confluentinc/confluent-local:latest
    hostname: broker
    platform: linux/amd64
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092'
    ports:
      - "9092:9092"
    healthcheck:
      test: [ "CMD", "kafka-broker-api-versions", "--bootstrap-server", "broker:29092" ]
      interval: 10s
      timeout: 10s
      retries: 10

  kafka-init:
    image: confluentinc/cp-kafka:7.6.0
    profiles:
      - kafka-init
    container_name: kafka-init
    depends_on:
      broker:
        condition: service_healthy
    volumes:
      - ./kafka-init.sh:/kafka-init.sh
    command: [ "/bin/bash", "-c", "/kafka-init.sh; " ]

  kafka-connect-unsecured:
    image: confluentinc/cp-kafka-connect:latest
    container_name: kafka-connect-unsecured
    platform: linux/amd64
    depends_on:
      broker:
        condition: service_healthy
    ports:
      - 8084:8084
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "broker:29092"
      CONNECT_LISTENERS: http://0.0.0.0:8084
      CONNECT_GROUP_ID: kafka-connect
      CONNECT_CONFIG_STORAGE_TOPIC: _connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: _connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN: "[%d] %p %X{connector.context}%m (%c:%L)%n"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components,/data/connect-jars
    healthcheck:
      test: ["CMD-SHELL", "curl -u admin:secret -s -o /dev/null http://localhost:8084"]
      interval: 10s
      timeout: 10s
      retries: 10
    command:
      - bash
      - -c
      - |
        echo "Installing Connector"
        confluent-hub install --no-prompt confluentinc/kafka-connect-datagen:latest
        #
        echo "Launching Kafka Connect worker"
        /etc/confluent/docker/run &
        #
        sleep infinity

  kafka-connect-secured:
    image: confluentinc/cp-kafka-connect:latest
    container_name: kafka-connect-secured
    platform: linux/amd64
    depends_on:
      broker:
        condition: service_healthy
    ports:
      - 8083:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "broker:29092"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka-connect
      CONNECT_CONFIG_STORAGE_TOPIC: _connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: _connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN: "[%d] %p %X{connector.context}%m (%c:%L)%n"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components,/data/connect-jars
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka-connect/kafka-connect-jaas.config"
      CONNECT_REST_EXTENSION_CLASSES: org.apache.kafka.connect.rest.basic.auth.extension.BasicAuthSecurityRestExtension
    volumes:
      - ./kafka-connect-jaas.config:/etc/kafka-connect/kafka-connect-jaas.config
      - ./password.properties:/etc/kafka-connect/password.properties
    healthcheck:
      test: ["CMD-SHELL", "curl -u admin:secret -s -o /dev/null http://localhost:8083"]
      interval: 10s
      timeout: 10s
      retries: 10
    command:
      - bash
      - -c
      - |
        echo "Installing Connector"
        confluent-hub install --no-prompt confluentinc/kafka-connect-datagen:latest
        #
        echo "Launching Kafka Connect worker"
        /etc/confluent/docker/run &
        #
        sleep infinity

  kafka-connect-secured-init:
    image: curlimages/curl:latest
    depends_on:
      kafka-connect-secured:
        condition: service_healthy
    command:
      - sh
      - -c
      - |
        echo "Registering users connector..."
        curl -u 'admin:secret' -i -X PUT -H "Content-Type:application/json" \
          http://kafka-connect-secured:8083/connectors/kafka-connect-datagen-users/config \
          -d '{
            "connector.class": "io.confluent.kafka.connect.datagen.DatagenConnector",
            "kafka.topic": "dev.users.events",
            "schema.filename": "users_schema.avro",
            "schema.keyfield": "userid",
            "key.converter": "org.apache.kafka.connect.storage.StringConverter",
            "value.converter": "org.apache.kafka.connect.json.JsonConverter",
            "value.converter.schemas.enable": "false",
            "tasks.max": "1"
          }'

        echo "Registering product connector..."
        curl -u 'admin:secret' -i -X PUT -H "Content-Type:application/json" \
          http://kafka-connect-secured:8083/connectors/kafka-connect-datagen-product/config \
          -d '{
            "connector.class": "io.confluent.kafka.connect.datagen.DatagenConnector",
            "kafka.topic": "dev.product.events",
            "quickstart": "product",
            "key.converter": "org.apache.kafka.connect.storage.StringConverter",
            "value.converter": "org.apache.kafka.connect.json.JsonConverter",
            "value.converter.schemas.enable": "false",
            "tasks.max": "1"
          }'
  kafka-connect-unsecured-init:
    image: curlimages/curl:latest
    depends_on:
      kafka-connect-unsecured:
        condition: service_healthy
    command:
      - sh
      - -c
      - |
        echo "Registering users connector..."
        curl -i -X PUT -H "Content-Type:application/json" \
          http://kafka-connect-unsecured:8084/connectors/kafka-connect-datagen-users/config \
          -d '{
            "connector.class": "io.confluent.kafka.connect.datagen.DatagenConnector",
            "kafka.topic": "dev.users.events",
            "schema.filename": "users_schema.avro",
            "schema.keyfield": "userid",
            "key.converter": "org.apache.kafka.connect.storage.StringConverter",
            "value.converter": "org.apache.kafka.connect.json.JsonConverter",
            "value.converter.schemas.enable": "false",
            "tasks.max": "1"
          }'

        echo "Registering product connector..."
        curl -i -X PUT -H "Content-Type:application/json" \
          http://kafka-connect-unsecured:8084/connectors/kafka-connect-datagen-product/config \
          -d '{
            "connector.class": "io.confluent.kafka.connect.datagen.DatagenConnector",
            "kafka.topic": "dev.product.events",
            "quickstart": "product",
            "key.converter": "org.apache.kafka.connect.storage.StringConverter",
            "value.converter": "org.apache.kafka.connect.json.JsonConverter",
            "value.converter.schemas.enable": "false",
            "tasks.max": "1"
          }'